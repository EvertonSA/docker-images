name: KatalonDockerCI-NonLatest
on:
  push:
    branches:
      - release-test-sec
jobs:
  run:
    name: Run
    runs-on: ubuntu-latest
    env:
        KS_VERSION: 8.4.1
        KS_VERSION_TAG: test-sec
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name : Prepare docker install 
      run: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        sudo apt -y install jq
    # - name: Prepare 
    #   run: |
    #     chmod u+x ./build/*.sh
    #     ./build/prevent_overwrite_existing_tag.sh $KS_VERSION
    # - name:  Build
    #   run: |
    #     chmod u+x ./build/*.sh
    #     ./build/clean.sh $KS_VERSION
    #     ./build/build.sh $KS_VERSION
    #     ./build/tag.sh $KS_VERSION 
    # - name: Test
    #   run: | 
    #     chmod u+x ./test/project/*.sh
    #     cd $GITHUB_WORKSPACE/test/project && rm -rfv ./bin && ./run_chrome.sh $KS_VERSION ${{ secrets.API_KEY }}
    #     cd $GITHUB_WORKSPACE/test/project && rm -rfv ./bin && ./run_chrome_root.sh $KS_VERSION ${{ secrets.API_KEY }}
    #     cd $GITHUB_WORKSPACE/test/project && rm -rfv ./bin && ./run_chrome_advanced.sh $KS_VERSION ${{ secrets.API_KEY }}
    #     cd $GITHUB_WORKSPACE/test/project && rm -rfv ./bin && ./run_firefox.sh $KS_VERSION ${{ secrets.API_KEY }}
    #   continue-on-error: true
    # - uses: azure/docker-login@v1
    #   with:
    #     login-server: registry.hub.docker.com
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    # - name: Push to dockerhub
    #   run: |
    #     cd $GITHUB_WORKSPACE
    #     docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io
    #     ./build/tag.sh $KS_VERSION_TAG
    #     ./build/push.sh $KS_VERSION_TAG
    # - name: Slack Notification
    #   uses: rtCamp/action-slack-notify@master
    #   env:
    #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    - name: Scan Security Vulnerabilities
      run: |
        chmod u+x ./build/*.sh
        ./build/security_scan.sh
    - name: Upload report
      uses: stcalica/s3-upload@0.0.1
      with:
        bucket: ${{ secrets.SEC_AWS_S3_BUCKET }}
        package: report
        key: $KS_VERSION
        AWS_REGION: us-east-1
        AWS_SECRET_ID: ${{ secrets.SEC_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_KEY: ${{ secrets.SEC_AWS_SECRET_ACCESS_KEY }}
